{"version":3,"sources":["store/socket/reducer.js","store/user/reducer.js","store/chat/reducer.js","store/index.js","components/ads/Ads.js","store/user/actions.js","components/chat/EmojiBox.js","components/chat/ChatBox.js","components/chat/Message.js","components/chat/Chat.js","store/socket/actions.js","store/chat/actions.js","components/footer/Footer.js","components/home/Home.js","components/terms/Terms.js","App.js","index.js"],"names":["INITIAL_STATE","connected","error","socketReducer","state","action","type","username","authenticated","id","read_rules","in_queue","userReducer","isAuthenticated","peer","messages","chatReducer","message","createStore","combineReducers","socket","user","chat","window","__REDUX_DEVTOOLS_EXTENSION__","Ads","props","className","to","setRulesRead","isRulesRead","EmojiBox","handleClickOutside","e","selfWrap","current","contains","target","handleClose","handleChange","setState","isLoading","gifs","query","value","length","searchGifs","_","a","removeScrollEvent","axios","get","params","api_key","q","limit","offset","results","status","Error","data","map","gif","original","images","url","fixed","fixed_height","registerScrollEvent","getRandomGifs","randomGifsResult","randomGifs","randomGif","renderLastOrRandomGifs","lastGifs","JSON","parse","localStorage","getItem","ref","gifsScroll","gifItem","index","href","onClick","handleClick","key","src","alt","addEventListener","scrollEvent","removeEventListener","scrollHeight","offsetHeight","scrollTop","changeTab","preventDefault","activeTab","dataset","tab","lastUsedGifs","push","setItem","stringify","renderTabs","React","createRef","document","this","visible","placeholder","onChange","data-tab","Component","ChatBox","onKeyUp","isTyping","sendTypingStatus","typingTimeout","setTimeout","typingTimeoutFunc","clearTimeout","onSubmit","sendMessage","text","notifications","addNotification","insert","container","dismiss","duration","openEmojiMenu","isEmojiOpened","closeEmojiMenu","emojiButtonRef","onFocus","required","Message","owned","ownerUid","uid","onLoad","imgOnLoad","renderMessage","Chat","newMessage","userId","addMessage","emit","scrollChatDown","handleLeave","messageListEnd","scrollIntoView","scrollTo","top","behavior","toAds","peerTyping","name","uuidv4","socketIOClient","location","origin","replace","on","connectionUpdated","setUserId","addToQueue","payload","removeFromQueue","setPeer","clearChat","close","isReadRules","inQueue","i","connect","dispatch","isConnected","Footer","hidden","Home","setUsername","setAuthenticationStatus","htmlFor","Terms","readRules","toChat","handleScrollButton","scrollRef","scrollBy","handleScroll","srcElement","scrollBottom","checked","RouteMatchChat","children","useRouteMatch","App","match","path","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.a617a264.chunk.js","sourcesContent":["const INITIAL_STATE = {\r\n  connected: false,\r\n  error: false,\r\n};\r\n\r\nconst socketReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case 'CONNECTION_UPDATED':\r\n      return {\r\n        ...state,\r\n        connected: action.connected,\r\n        error: action.error\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default socketReducer;\r\n","const INITIAL_STATE = {\r\n  username: '',\r\n  authenticated: false,\r\n  id: null,\r\n  read_rules: false,\r\n  in_queue: false\r\n};\r\n\r\nconst userReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case 'SET_USERNAME':\r\n      return {\r\n        ...state,\r\n        username: action.username\r\n      };\r\n    case 'SET_USER_ID':\r\n      return {\r\n        ...state,\r\n        id: action.id\r\n      };\r\n    case 'ADD_TO_QUEUE':\r\n      return {\r\n        ...state,\r\n        in_queue: true\r\n      };\r\n    case 'REMOVE_FROM_QUEUE':\r\n      return {\r\n        ...state,\r\n        in_queue: false\r\n      };\r\n    case 'SET_RULES_READ':\r\n      return {\r\n        ...state,\r\n        read_rules: !state.read_rules\r\n      };\r\n    case 'SET_AUTHENTICATION_STATUS':\r\n      return {\r\n        ...state,\r\n        authenticated: action.isAuthenticated\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","const INITIAL_STATE = {\r\n  peer: null,\r\n  messages: []\r\n};\r\n\r\nconst chatReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_MESSAGE':\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, action.message]\r\n      };\r\n    case 'SET_PEER':\r\n      return {\r\n        ...state,\r\n        peer: action.peer\r\n      };\r\n    case 'CLEAR_CHAT':\r\n      return INITIAL_STATE;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default chatReducer;\r\n","import { createStore, combineReducers } from 'redux';\r\n\r\nimport socketReducer from './socket/reducer';\r\nimport userReducer from './user/reducer';\r\nimport chatReducer from './chat/reducer';\r\n\r\nexport default createStore(combineReducers({\r\n  socket: socketReducer,\r\n  user: userReducer,\r\n  chat: chatReducer\r\n}), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Ads = props => {\r\n  return (\r\n    <div className=\"window-container ads\">\r\n      <div className=\"ads-container\">\r\n        <div className=\"ads-item\">\r\n          <h4>פרסומת 1</h4>\r\n        </div>\r\n\r\n        <div className=\"ads-item\">\r\n          <h4>פרסומת 2</h4>\r\n        </div>\r\n\r\n        <div className=\"ads-item\">\r\n          <h4>פרסומת 3</h4>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"window-action\">\r\n        <Link to=\"/chat\" className=\"button button__primary\">\r\n          התחל שיחה חדשה\r\n        </Link>\r\n        {/* <button\r\n          className=\"button button__primary\"\r\n          onClick={onSubmit}\r\n          >\r\n            התחל שיחה חדשה\r\n          </button> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Ads;\r\n","export const addToQueue = () => ({\r\n  type: 'ADD_TO_QUEUE'\r\n});\r\n\r\nexport const removeFromQueue = () => ({\r\n  type: 'REMOVE_FROM_QUEUE'\r\n});\r\n\r\nexport const setUsername = username => {\r\n  return {\r\n    type: 'SET_USERNAME',\r\n    username\r\n  };\r\n};\r\n\r\nexport const setUserId = id => ({\r\n  type: 'SET_USER_ID',\r\n  id\r\n});\r\n\r\nexport const setRulesRead = isRulesRead => ({\r\n  type: 'SET_RULES_READ',\r\n  isRulesRead\r\n});\r\n\r\nexport const setAuthenticationStatus = isAuthenticated => ({\r\n  type: 'SET_AUTHENTICATION_STATUS',\r\n  isAuthenticated\r\n});\r\n","import React from 'react';\r\nimport * as _ from 'lodash';\r\nimport axios from 'axios';\r\n\r\nclass EmojiBox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isLoading: false,\r\n      gifs: [],\r\n      randomGifs: [],\r\n      message: 'הזן את השאילתה שלך בשדה החיפוש',\r\n      query: '',\r\n      offset: 0,\r\n      activeTab: 'gifs'\r\n    };\r\n\r\n    this.gifsScroll = React.createRef();\r\n\r\n    this.selfWrap = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('mousedown', this.handleClickOutside);\r\n    this.getRandomGifs();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('mousedown', this.handleClickOutside);\r\n  }\r\n\r\n  handleClickOutside = (e) => {\r\n    if (!this.selfWrap.current || !this.selfWrap.current.contains(e.target)) {\r\n      this.props.handleClose();\r\n    }\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      isLoading: true,\r\n      gifs: [],\r\n      query: e.target.value\r\n    }, () => {\r\n      if (this.state.query.length > 0) {\r\n        this.searchGifs();\r\n      } else {\r\n        this.setState({\r\n          isLoading: false,\r\n          gifs: [],\r\n          message: 'הזן את השאילתה שלך בשדה החיפוש'\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  searchGifs = _.debounce(async () => {\r\n    const query = this.state.query;\r\n\r\n    this.removeScrollEvent();\r\n\r\n    this.setState({\r\n      message: ''\r\n    });\r\n\r\n    try {\r\n      const results = await axios.get('https://api.giphy.com/v1/gifs/search', {\r\n        params: {\r\n          api_key: 'fCluNP2WYQOBvk1Tp2kQQG21Ca9wMXHC',\r\n          q: query,\r\n          limit: 10,\r\n          offset: this.state.offset\r\n        }\r\n      });\r\n\r\n      if (results.status !== 200) {\r\n        throw new Error('Status code not 200');\r\n      }\r\n\r\n      if (results.data.data.length === 0 && this.state.offset == 0) {\r\n        throw new Error('שום דבר לא נמצא');\r\n      }\r\n\r\n      const gifs = results.data.data.map(gif => {\r\n        return {\r\n          original: gif.images.original.url,\r\n          fixed: gif.images.fixed_height.url,\r\n          id: gif.images.id\r\n        };\r\n      });\r\n\r\n      this.setState({\r\n        isLoading: false,\r\n        gifs: [...this.state.gifs, ...gifs]\r\n      }, () => {\r\n        this.registerScrollEvent();\r\n      });\r\n    } catch (err) {\r\n      this.setState({\r\n        isLoading: false,\r\n        gifs: [],\r\n        message: err.message\r\n      });\r\n    }\r\n  }, 300);\r\n\r\n  getRandomGifs = async () => {\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n\r\n    try {\r\n      const randomGifsResult = await axios.get('https://api.giphy.com/v1/gifs/trending', {\r\n        params: {\r\n          api_key: 'fCluNP2WYQOBvk1Tp2kQQG21Ca9wMXHC',\r\n          limit: 20\r\n        }\r\n      });\r\n\r\n      if (randomGifsResult.status !== 200) {\r\n        throw new Error('Status code not 200');\r\n      }\r\n  \r\n      if (randomGifsResult.data.data.length === 0) {\r\n        throw new Error('שום דבר לא נמצא');\r\n      }\r\n\r\n      const randomGifs = randomGifsResult.data.data.map(randomGif => {\r\n        return {\r\n          original: randomGif.images.original.url,\r\n          fixed: randomGif.images.fixed_height.url,\r\n          id: randomGif.id\r\n        };\r\n      });\r\n\r\n      this.setState({\r\n        isLoading: false,\r\n        randomGifs\r\n      });\r\n    } catch (err) {\r\n      this.setState({\r\n        isLoading: false,\r\n        randomGifs: []\r\n      });\r\n    }\r\n  };\r\n\r\n  renderLastOrRandomGifs = () => {\r\n    const lastGifs = JSON.parse(localStorage.getItem('recent_gifs'));\r\n\r\n    if (lastGifs && lastGifs.length > 0) {\r\n      return (\r\n        <div className=\"messenger-content-emoji-box-content-results\" ref={this.gifsScroll}>\r\n          {lastGifs.map((gifItem, index) => {\r\n            return (\r\n              <a\r\n                className=\"messenger-content-emoji-box-content-results-item\"\r\n                href=\"#\"\r\n                onClick={(e) => this.handleClick(e, gifItem)}\r\n                key={index}\r\n              >\r\n                <img src={gifItem.original} alt=\"\" />\r\n              </a>\r\n            );\r\n          })}\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"messenger-content-emoji-box-content-results\" ref={this.gifsScroll}>\r\n          {this.state.randomGifs.map((gifItem, index) => {\r\n            return (\r\n              <a\r\n                className=\"messenger-content-emoji-box-content-results-item\"\r\n                href=\"#\"\r\n                onClick={(e) => this.handleClick(e, gifItem)}\r\n                key={index}\r\n              >\r\n                <img src={gifItem.fixed} alt=\"\" />\r\n              </a>\r\n            );\r\n          })}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  registerScrollEvent = () => {\r\n    if (this.gifsScroll.current) {\r\n      this.gifsScroll.current.addEventListener('scroll', this.scrollEvent);\r\n    }\r\n  };\r\n\r\n  removeScrollEvent = () => {\r\n    if (this.gifsScroll.current) {\r\n      this.gifsScroll.current.removeEventListener('scroll', this.scrollEvent);\r\n    }\r\n  };\r\n\r\n  scrollEvent = (e) => {\r\n    const height = e.target.scrollHeight;\r\n    const offsetHeight = e.target.offsetHeight;\r\n    const scrollTop = e.target.scrollTop;\r\n\r\n    if ((height - offsetHeight) <= scrollTop * 2) {\r\n      this.setState({\r\n        offset: this.state.offset + 10\r\n      }, () => {\r\n        this.searchGifs();\r\n      });\r\n    }\r\n  };\r\n\r\n  changeTab = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      activeTab: e.target.dataset.tab\r\n    });\r\n  };\r\n\r\n  handleClick = (e, gif) => {\r\n    e.preventDefault();\r\n\r\n    let lastUsedGifs = JSON.parse(localStorage.getItem('recent_gifs') || '[]');\r\n\r\n    if (lastUsedGifs && lastUsedGifs.length < 20) {\r\n      lastUsedGifs.push(gif);\r\n      lastUsedGifs = _.uniqBy(lastUsedGifs, 'id');\r\n    }\r\n\r\n    localStorage.setItem('recent_gifs', JSON.stringify(lastUsedGifs));\r\n\r\n    this.props.onClick({\r\n      type: 'gif',\r\n      url: gif.original\r\n    });\r\n\r\n    this.props.handleClose();\r\n  };\r\n\r\n  renderTabs = () => {\r\n    switch (this.state.activeTab) {\r\n      case 'gifs':\r\n        return (\r\n          <div className=\"messenger-content-emoji-box-content\">\r\n            {this.state.isLoading ? (\r\n              <p className=\"messenger-content-emoji-box-content-message\">חכה רגע...</p>\r\n            ) : (\r\n              this.state.gifs.length > 0 ? (\r\n                <div className=\"messenger-content-emoji-box-content-results\" ref={this.gifsScroll}>\r\n                  {this.state.gifs.map((gifItem, index) => {\r\n                    return (\r\n                      <a\r\n                        className=\"messenger-content-emoji-box-content-results-item\"\r\n                        href=\"#\"\r\n                        onClick={(e) => this.handleClick(e, gifItem)}\r\n                        key={index}\r\n                      >\r\n                        <img src={gifItem.fixed} alt=\"\" />\r\n                      </a>\r\n                    );\r\n                  })}\r\n                </div>\r\n              ) : (\r\n                this.renderLastOrRandomGifs()\r\n                // <p className=\"messenger-content-emoji-box-content-message\">{this.state.message}</p>\r\n              )\r\n            )}\r\n          </div>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={this.props.visible ? 'messenger-content-emoji-box messenger-content-emoji-box__visible' : 'messenger-content-emoji-box'}\r\n        ref={this.selfWrap}\r\n      >\r\n        <div className=\"messenger-content-emoji-box-container\">\r\n            {this.state.activeTab === 'gifs' ? (\r\n              <div className=\"messenger-content-emoji-box-search\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"חיפוש GIF\"\r\n                  onChange={this.handleChange}\r\n                  value={this.state.query}\r\n                />\r\n              </div>\r\n            ) : null}\r\n\r\n            {this.renderTabs()}\r\n\r\n            <div className=\"messenger-content-emoji-box-tabs\">\r\n                <a\r\n                  className={this.state.activeTab === 'gifs' ? 'messenger-content-emoji-box-tabs-item messenger-content-emoji-box-tabs-item__active' : 'messenger-content-emoji-box-tabs-item'}\r\n                  href=\"#\"\r\n                  data-tab=\"gifs\"\r\n                  onClick={this.changeTab}\r\n                >\r\n                  GIFs\r\n                </a>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EmojiBox;\r\n","import React from 'react';\r\nimport { store as notifications } from 'react-notifications-component';\r\n\r\nimport EmojiBox from './EmojiBox';\r\n\r\nclass ChatBox extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            message : '',\r\n            isEmojiOpened: false,\r\n            isTyping: false\r\n        };\r\n\r\n        this.typingTimeout = null;\r\n        this.emojiButtonRef = React.createRef();\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            message : e.target.value\r\n        })\r\n    }\r\n\r\n    onKeyUp = (e) => {\r\n        e.preventDefault();\r\n        if (e.key === 'Enter') {\r\n            this.setState({\r\n                isTyping: false\r\n            }, () => {\r\n                this.props.sendTypingStatus(false);\r\n            });\r\n        } else {\r\n            if (this.state.isTyping === false) {\r\n                this.setState({\r\n                    isTyping: true\r\n                }, () => {\r\n                    this.props.sendTypingStatus(true);\r\n                    this.typingTimeout = setTimeout(this.typingTimeoutFunc, 2000);\r\n                });\r\n            } else {\r\n                clearTimeout(this.typingTimeout);\r\n                this.typingTimeout = setTimeout(this.typingTimeoutFunc, 2000);\r\n            }\r\n        }\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.message.length > 0) {\r\n            this.props.sendMessage({\r\n                type : 'message',\r\n                text : this.state.message\r\n            });\r\n            this.setState({message : ''});\r\n        } else {\r\n            notifications.addNotification({\r\n                message: 'אנא הכנס הודעה',\r\n                type: 'danger',\r\n                insert: 'top',\r\n                container: 'top-center',\r\n                dismiss: {\r\n                  duration: 3000\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    openEmojiMenu = e => {\r\n        this.setState({\r\n            isEmojiOpened: true\r\n        });\r\n    };\r\n\r\n    closeEmojiMenu = () => {\r\n        this.setState({\r\n            isEmojiOpened: false\r\n        });\r\n    };\r\n\r\n    typingTimeoutFunc = () => {\r\n        this.setState({\r\n            isTyping: false\r\n        }, () => {\r\n            this.props.sendTypingStatus(false);\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"messenger-content-input\">\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <input\r\n                            placeholder=\"הקלד כאן...\"\r\n                            value={this.state.message}\r\n                            onChange={this.onChange}\r\n                            onKeyUp={this.onKeyUp}\r\n                            onFocus={this.onFocus}\r\n                            type=\"text\"\r\n                            required\r\n                        />\r\n\r\n                        <button\r\n                            className=\"button button__primary messenger-content-input-button__send\"\r\n                            type=\"submit\"\r\n                        >\r\n                            <i className=\"icon icon-chevron__left\"></i>\r\n                        </button>\r\n\r\n                        <button\r\n                            className={this.state.isEmojiOpened ? 'messenger-content-input-button__emoji messenger-content-input-button__emoji__active' : 'messenger-content-input-button__emoji'}\r\n                            onClick={this.openEmojiMenu}\r\n                            ref={this.emojiButtonRef}\r\n                            type=\"button\"\r\n                        >\r\n                            <i className=\"icon icon-emoji\"></i>\r\n                        </button>\r\n\r\n                        <EmojiBox visible={this.state.isEmojiOpened} onClick={this.props.sendMessage} handleClose={this.closeEmojiMenu} />\r\n                    </form>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ChatBox;","import React from 'react';\r\n\r\nconst Message = (props) => {\r\n    const owned = props.ownerUid === props.message.uid;\r\n\r\n    const renderMessage = () => {\r\n        switch (props.message.message.type) {\r\n            case 'message':\r\n                return (\r\n                    <p className=\"messenger-content-list-item-text\">\r\n                        {props.message.message.text}\r\n                    </p>\r\n                );\r\n            case 'gif':\r\n                return (\r\n                    <div className=\"messenger-content-list-item-image\">\r\n                        <img src={props.message.message.url} onLoad={props.imgOnLoad} alt=\"\"/>\r\n                    </div>\r\n                );\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={owned ? 'messenger-content-list-item messenger-content-list-item__owned' : 'messenger-content-list-item'}>\r\n            {renderMessage()}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Message;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport socketIOClient from 'socket.io-client';\r\nimport { connect } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { connectionUpdated } from '../../store/socket/actions';\r\nimport {\r\n  addToQueue,\r\n  removeFromQueue,\r\n  setUserId\r\n} from '../../store/user/actions';\r\nimport {\r\n  setPeer,\r\n  clearChat,\r\n  addMessage\r\n} from '../../store/chat/actions';\r\nimport ChatBox from \"./ChatBox\";\r\nimport Message from \"./Message\";\r\n\r\n\r\nclass Chat extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.socket = null;\r\n\r\n    this.state = {\r\n      toAds: false,\r\n      peerTyping: false,\r\n    }\r\n\r\n    this.messageListEnd = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const username = this.props.username;\r\n    const user = {\r\n      name: username,\r\n      id: uuidv4()\r\n    };\r\n\r\n    this.socket = socketIOClient(window.location.origin.replace(/^http/, 'ws'));\r\n\r\n    this.socket.on('connect', () => {\r\n      this.props.connectionUpdated(true);\r\n\r\n      this.socket.emit('join', user);\r\n\r\n      this.props.setUserId(user.id)\r\n      this.props.addToQueue();\r\n    });\r\n\r\n    this.socket.on('chatStart', payload => {\r\n      this.props.removeFromQueue();\r\n      this.props.setPeer(payload);\r\n    });\r\n\r\n    this.socket.on('chatEnd', () => {\r\n      this.props.clearChat();\r\n      this.props.addToQueue();\r\n\r\n      this.setState({\r\n        toAds: true\r\n      });\r\n    });\r\n\r\n    this.socket.on('message', payload => {\r\n      this.props.addMessage(payload);\r\n      this.scrollChatDown();\r\n    });\r\n\r\n    this.socket.on('typingStatus', payload => {\r\n      this.setState({\r\n        peerTyping: payload.isTyping\r\n      });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.socket.close();\r\n  }\r\n\r\n  sendMessage = (message, e) => {\r\n    const newMessage = {\r\n      uid: this.props.userId,\r\n      message\r\n    };\r\n\r\n    this.props.addMessage(newMessage);\r\n    this.socket.emit('message', newMessage);\r\n\r\n    this.scrollChatDown();\r\n  };\r\n\r\n  sendTypingStatus = (status) => {\r\n    this.socket.emit('isTyping', {\r\n      isTyping: status\r\n    });\r\n  };\r\n\r\n  handleLeave = e => {\r\n    this.socket.emit('leaveRoom');\r\n  };\r\n\r\n  scrollChatDown = () => {\r\n    if (this.messageListEnd && this.messageListEnd.current) {\r\n      this.messageListEnd.current.scrollIntoView();\r\n      setTimeout(() => {\r\n        this.messageListEnd.current.scrollTo({\r\n          top: this.messageListEnd.current.scrollHeight,\r\n          behavior: 'smooth'\r\n        });\r\n      }, 100);\r\n    }\r\n  };\r\n\r\n  imgOnLoad = () => {\r\n    this.scrollChatDown();\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.authenticated || !this.props.isReadRules) {\r\n      return (\r\n        <Redirect to=\"/\" />\r\n      );\r\n    }\r\n\r\n    if (this.state.toAds) {\r\n      return (\r\n        <Redirect to=\"/ads\" />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"chat window-container\">\r\n        <div className=\"window-background\"></div>\r\n        <div className=\"window-card\">\r\n          <div className=\"messenger\">\r\n            <header className=\"messenger-header\">\r\n              <div className=\"messenger-header-container\">\r\n                {this.props.inQueue ? (\r\n                  <div className=\"messenger-header-status\">\r\n                    <p className=\"messenger-header-status-message\">חיפוש בן שיח</p>\r\n                  </div>\r\n                ) : (\r\n                  <>\r\n                    <div className=\"messenger-header-subject\">\r\n                      <div className=\"messenger-header-subject-avatar\">\r\n                        <img src=\"\" alt=\"\" />\r\n                      </div>\r\n                      <div className=\"messenger-header-subject-info\">\r\n                        <h4 className=\"messenger-header-subject-name\">{this.props.username}</h4>\r\n                        <p className=\"messenger-header-subject-status\">{'מחובר/ת'}</p>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"messenger-header-action\">\r\n                      <button onClick={this.handleLeave}>\r\n                        Switch\r\n                      </button>\r\n                    </div>\r\n\r\n                    <div className=\"messenger-header-companion\">\r\n                      <div className=\"messenger-header-companion-info\">\r\n                        <h4 className=\"messenger-header-companion-name\">{this.props.peer ? this.props.peer.user.name : ''}</h4>\r\n                        <p className=\"messenger-header-companion-status\">\r\n                          {this.state.peerTyping ? 'מקליד/ה' : 'מחובר/ת'}\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"messenger-header-companion-avatar\">\r\n                        <img src=\"\" alt=\"\" />\r\n                      </div>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n            </header>\r\n            <div className=\"messenger-content\">\r\n              <div className=\"messenger-content-container\">\r\n                <div className=\"messenger-content-status\">\r\n                  <p className=\"messenger-content-status-message\">\r\n                    {this.props.inQueue ? (\r\n                      'חכה עד שנמצא בן שיח ראוי עבורך :)'\r\n                    ) : (\r\n                      `אתה מצ’וטט כרגע עם “${this.props.peer ? this.props.peer.user.name : ''}” בצאט מאובטח`\r\n                    )}\r\n                  </p>\r\n                </div>\r\n                <div className=\"messenger-content-list\" ref={this.messageListEnd}>\r\n                  {this.props.messages.length !== 0 && (\r\n                    this.props.messages.map((message, i) => {\r\n                      return <Message key={i} message={message} ownerUid={this.props.userId} imgOnLoad={this.imgOnLoad} />;\r\n                    })\r\n                  )}\r\n                  <div ></div>\r\n                </div>\r\n                <ChatBox\r\n                  sendMessage={this.sendMessage}\r\n                  sendTypingStatus={this.sendTypingStatus}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  authenticated: state.user.authenticated,\r\n  isReadRules: state.user.read_rules,\r\n  inQueue: state.user.in_queue,\r\n  username: state.user.username,\r\n  userId: state.user.id,\r\n  connected: state.socket.connected,\r\n  peer: state.chat.peer,\r\n  messages: state.chat.messages\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  connectionUpdated: isConnected => dispatch(connectionUpdated(isConnected)),\r\n  addToQueue: () => dispatch(addToQueue()),\r\n  removeFromQueue: () => dispatch(removeFromQueue()),\r\n  setUserId: userId => dispatch(setUserId(userId)),\r\n  setPeer: peer => dispatch(setPeer(peer)),\r\n  clearChat: () => dispatch(clearChat()),\r\n  addMessage: message => dispatch(addMessage(message))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);\r\n","export const connectionUpdated = isConnected => ({\r\n  type: 'CONNECTION_UPDATED',\r\n  connected: isConnected,\r\n  error: false\r\n});\r\n","export const addMessage = (message) => ({\r\n  type: 'ADD_MESSAGE',\r\n  message\r\n});\r\n\r\nexport const setPeer = (peer) => ({\r\n  type: 'SET_PEER',\r\n  peer\r\n});\r\n\r\nexport const clearChat = () => ({\r\n  type: 'CLEAR_CHAT'\r\n});\r\n","import React from 'react';\r\n\r\nclass Footer extends React.Component {\r\n  render() {\r\n    return (\r\n      <footer className={this.props.hidden ? 'footer__hidden' : null}>\r\n        <nav className=\"footer-nav\">\r\n          <a className=\"footer-nav-item\" href=\"/\">תקנון</a>\r\n          <a className=\"footer-nav-item\" href=\"/\">דווח</a>\r\n          <a className=\"footer-nav-item\" href=\"/\">צור קשר</a>\r\n        </nav>\r\n        <p className=\"footer-copyright\">נבנה ע”י © Grimix</p>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { store as notifications } from 'react-notifications-component';\r\n\r\nimport {\r\n  setUsername,\r\n  setAuthenticationStatus,\r\n  setRulesRead\r\n} from '../../store/user/actions';\r\n\r\nclass Home extends React.Component {\r\n  componentDidMount() {\r\n    if (localStorage.getItem('username')) {\r\n      this.props.setUsername(localStorage.getItem('username'));\r\n    }\r\n\r\n    if (localStorage.getItem('read_rules') === true) {\r\n      this.props.setRulesRead();\r\n    }\r\n  }\r\n\r\n  onChange = e => {\r\n    this.props.setUsername(e.target.value)\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (this.props.username.length > 3) {\r\n      this.props.setAuthenticationStatus(true);\r\n    } else {\r\n      notifications.addNotification({\r\n        message: 'נדרשים לפחות 3 תווים',\r\n        type: 'danger',\r\n        insert: 'top',\r\n        container: 'top-center',\r\n        dismiss: {\r\n          duration: 3000\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (this.props.isAuthenticated && !this.props.isReadRules) {\r\n      localStorage.setItem('username', this.props.username);\r\n      return (\r\n        <Redirect to=\"/terms\" />\r\n      );\r\n    } else if (this.props.isAuthenticated && this.props.isReadRules) {\r\n      localStorage.setItem('username', this.props.username);\r\n      localStorage.setItem('read_rules', true);\r\n      return (\r\n        <Redirect to=\"/chat\" />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"window-container home\">\r\n        <div className=\"window-background\"></div>\r\n        <div className=\"window-card\">\r\n          <form className=\"form\" onSubmit={this.onSubmit}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"nickname\">בחר שם:</label>\r\n              <input\r\n                id=\"nickname\"\r\n                placeholder=\"הקלד שם...\"\r\n                value={this.props.username}\r\n                onChange={this.onChange}\r\n              />\r\n            </div>\r\n  \r\n            <div className=\"window-action\">\r\n              <button\r\n                className=\"button button__primary\"\r\n                onClick={this.onSubmit}\r\n              >\r\n                חפש צאט\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  username: state.user.username,\r\n  isAuthenticated: state.user.authenticated,\r\n  isReadRules: state.user.read_rules\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setUsername: username => dispatch(setUsername(username)),\r\n  setAuthenticationStatus: isAuthenticated => dispatch(setAuthenticationStatus(isAuthenticated)),\r\n  setRulesRead: () => dispatch(setRulesRead())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { store as notifications } from 'react-notifications-component';\r\n\r\nimport { setRulesRead } from '../../store/user/actions';\r\n\r\nclass Terms extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      toChat: false,\r\n      scrollBottom: false,\r\n    };\r\n\r\n    this.scrollRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const scrollEvent = this.scrollRef;\r\n    if (scrollEvent) {\r\n      this.scrollRef.current.addEventListener('scroll', this.handleScroll);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n\r\n  }\r\n\r\n  onChange = e => {\r\n    this.props.setRulesRead();\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (this.props.readRules === true) {\r\n      this.setState({\r\n        toChat: true\r\n      });\r\n      localStorage.setItem('read_rules', true);\r\n    } else {\r\n      notifications.addNotification({\r\n        message: 'אשר שקראת את הכללים.',\r\n        type: 'danger',\r\n        insert: 'top',\r\n        container: 'top-center',\r\n        dismiss: {\r\n          duration: 3000\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  handleScrollButton = e => {\r\n    e.preventDefault();\r\n\r\n    this.scrollRef.current.scrollBy(0, 32)\r\n  };\r\n\r\n  handleScroll = e => {\r\n    // const scrollTop = e.srcElement.body.scrollTop;\r\n    // const scrollHeight = e.srcElement.body.scrollHeight;\r\n    const height = e.srcElement.scrollHeight;\r\n    const offsetHeight = e.srcElement.offsetHeight;\r\n    const scrollTop = e.srcElement.scrollTop;\r\n\r\n    if (height - offsetHeight === scrollTop) {\r\n      this.setState({\r\n        scrollBottom: true\r\n      });\r\n    } else {\r\n      this.setState({\r\n        scrollBottom: false\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.authenticated) {\r\n      return (\r\n        <Redirect to=\"/\" />\r\n      );\r\n    }\r\n\r\n    if (this.state.toChat) {\r\n      return (\r\n        <Redirect to=\"/chat\" />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"window-container terms\">\r\n        <div className=\"window-background\"></div>\r\n        <div className=\"window-card\">\r\n          <h3 className=\"window-title\">אנא אשר שקראת את התקנון...</h3>\r\n          <div className=\"window-scroller\">\r\n            <div className=\"window-scroller-container\" ref={this.scrollRef}>\r\n              <p>1. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\r\n              <p>2. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\r\n              <p>3. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\r\n              <p>4. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\r\n              <p>5. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\r\n              <p>6. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\r\n            </div>\r\n            {!this.state.scrollBottom ? (\r\n              <button className=\"window-scroller-button\" onClick={this.handleScrollButton}><div className=\"rectangle rectangle__white\"></div></button>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"window-checkbox\">\r\n            <input id=\"accept-terms\" type=\"checkbox\" checked={this.props.isRulesRead} onChange={this.onChange} />\r\n            <label htmlFor=\"accept-terms\">אני מאשר שקראתי את התקנון<span>*</span></label>\r\n          </div>\r\n          <div className=\"window-action\">\r\n            <button\r\n              className=\"button button__primary\"\r\n              onClick={this.onSubmit}\r\n            >\r\n              המשך\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  authenticated: state.user.authenticated,\r\n  readRules: state.user.read_rules\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setRulesRead: () => dispatch(setRulesRead())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Terms);\r\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  useRouteMatch\r\n} from 'react-router-dom';\r\nimport ReactNotification from 'react-notifications-component';\r\n\r\nimport 'normalize.css';\r\nimport './App.scss';\r\nimport 'react-notifications-component/dist/theme.css';\r\n\r\nimport Ads from './components/ads/Ads';\r\nimport Chat from './components/chat/Chat';\r\nimport Footer from './components/footer/Footer';\r\nimport Home from './components/home/Home';\r\nimport Terms from './components/terms/Terms';\r\n\r\nconst RouteMatchChat = ({ children }) => {\r\n  let isMatchChat = useRouteMatch('/chat');\r\n  return children(isMatchChat);\r\n};\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <ReactNotification />\r\n        <main>\r\n          <div className=\"main-background\"></div>\r\n          <div className=\"main-container\">\r\n            <div className=\"window\">\r\n              <div className=\"window-wrapper\">\r\n                <RouteMatchChat>\r\n                  {match => {\r\n                    return (\r\n                      <div className={match ? 'brand brand__hidden' : 'brand'}>\r\n                        <h1 className=\"brand-title\">Switchats</h1>\r\n\t\t\t\t\t              <p className=\"brand-text\">הצ’אטים שיעבירו לכם את הזמן</p>\r\n                      </div>\r\n                    );\r\n                  }}\r\n                </RouteMatchChat>\r\n\r\n                <Switch>\r\n                  <Route path=\"/ads\">\r\n                    <Ads />\r\n                  </Route>\r\n                  <Route path=\"/chat\">\r\n                    <Chat />\r\n                  </Route>\r\n                  <Route path=\"/terms\">\r\n                    <Terms />\r\n                  </Route>\r\n                  <Route path=\"/\">\r\n                    <Home />\r\n                  </Route>\r\n                </Switch>\r\n              </div>\r\n            </div>\r\n\r\n            <RouteMatchChat>\r\n              {match => {\r\n                return <Footer hidden={match} />\r\n              }}\r\n            </RouteMatchChat>\r\n          </div>\r\n        </main>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}